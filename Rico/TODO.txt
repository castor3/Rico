TODO

1 - Forçar a inserção do código do parâmetro em vez da descrição (multi-language friendly)			<<<DONE>>>
2 - Só executar as ações depois de verificar que não existe duplicados em nenhum dos parâmetros		<<<DONE>>>
3 - Implement option to remove parameter from list													<<<DONE>>>
4 - Implement Caliburn.Micro																		<<<DONE>>>
5 - Implement SupportFiles.dll																		<<<DONE>>>
6 - Manter a verificação da existência de "," no nome do parâmetro									<<<DONE>>>
7 - Add timer to prevent messages from overriding each other										<<<DONE>>>
8 - Fix CSV separator symbol (change ';' to ',')													<<<DONE>>>
9 - Create scopes to shorten life cycle of variables												<<<Very rarely makes sense to do this>>>
10 - Correct concatenation of the parameter name													<<<DONE>>>
11 - Prevent exceptions when files are missing														<<<DONE>>>
12 - Export "RemoveDiacritics()" to SupportFiles.dll												<<<DONE>>>
13 - Export some methods to the Parameter model														<<<DONE>>>
14 - Fix calculate the average																		<<<DONE>>>
15 - Create test to test multiple parameters, randomly picked										<<<DONE>>>
16 - Use current directory if "InitialPathBoxContent" is empty										<<<DONE>>>
17 - Ignore duplicate parameters																	<<<DONE>>>
18 - Write secondary messages to .log file															<<<DONE>>>
19 - Search for parameters files only on folders which name match the value of the textbox			<<<DONE>>>
20 - Add logic to see if .csv file has more lines after running the test "TestMultipleParameters()"	<<<DONE>>>
21 - Find version of "machinesparameters.txt" file and ignore if it's an incompatible version		<<<DONE>>>
22 - Add handler for global uncaught exceptions														<<<DONE>>>
23 - Fix "GetParameterName()" for some parameters (ex: Deceleration	max. speed to 0  (3907))		<<<DONE>>>
24 - Add name/model of the machine (from the textbox) to the beginning of each set of values colle.	<<<DONE>>>
25 - Save values to CSV only after collecting all parameters, otherwise, nothing will be saved		<<<DONE>>>
26 - Add Mock package - https://www.youtube.com/watch?v=Krj3-h198KQ
27 - Add code to check if it's a parameter of auxiliary axis "if (!parameter.GetPar...file))"
28 - Add tests to "ParameterValidationModel"														<<<DONE>>>
29 - Refactor entire "CollectValidParameter()"														<<<DONE>>>
30 - Get param. name from the "Base...Parameters.txt" file (for consistency of the name language)	<<<DONE>>>


